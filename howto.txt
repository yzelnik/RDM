% examples for Es and Vs:
% For some "earthy" (2D) colors: base = 1:-0.0138:0.13;  Es.St2Color = [base/1.1; base/3+0.4; base/2.5]';

Es=struct('Tstep',0.1,'Tdest',200,'Jcob',0,'posflag',1,'LSAthresh',0,'STsmall',0.001,'Vind',1,'St1Color',circshift(hsv(6),-2)*0.66,'BfColor',[0 0 0 ; 1 0 0; 0 0.75 0; 0 0 1; 0 0.75 0.75; 1 0 1],'BfStyle',['-- ';'-  ';'x  '],'TestFunc',{{@T_L2Norm,@T_CalcWL,@T_CountRegions,@T_MinMax}},'TestOuts',[2,3,1,4]);

Ps_VSG2=struct('LocFunc',@L_VSG,'SpaFunc',@S_RD,'IntegFunc',@I_FDE,'P',1.3,'eta',3.5,'kappa',1,'mu',1,'nu',3.333,'lambda',3.333,'gamma',3.333,'rho',0,'Ds',[1 1000],'Vnum',2,'Lx',100,'Ly',100,'Nx',128,'Ny',128);
Vs2=ones(128*128,1)*[0.5 0.1]+rand(128*128,2)/10;

Ps_CSV=struct('LocFunc',@L_CSV,'SpaFunc',@S_RD,'p1',0.1,'p2',0.1,'a11',0.03,'a12',0.02,'a21',0.06,'a22',0.03,'b0',0.3,'b1',1,'g',5,'e',1.58,'k',1.2,'m',3.14,'Ds',[0.003 0.003 0],'Vnum',3,'Lx',30,'Ly',30,'Nx',100,'Ny',1);
Vs=ones(Ps_CSV.Nx*Ps_CSV.Ny,1)*[0.5 0.5 0.1]+rand(Ps_CSV.Nx*Ps_CSV.Ny,3)/10;
Vs2=[ones(Ps_CSV.Nx*Ps_CSV.Ny/2,1)*[0 3.333 3] ;ones(Ps_CSV.Nx*Ps_CSV.Ny/2,1)*[2 0 0]]+rand(Ps_CSV.Nx*Ps_CSV.Ny,3)/100;


Es=struct('Tstep',0.1,'Tdest',200,'Jcob',0,'posflag',1,'LSAthresh',0,'STsmall',0.01,'St1Color',circshift(hsv(6),-2)*0.66,'BfColor',[0 0 0 ; 1 0 0; 0 0.75 0; 0 0 1; 0 0.75 0.75; 1 0 1],'BfStyle',['-- ';'-  ';'x  ']);
Vs=[rand(512,1),ones(512,1)];

% estimate Es.Tstep using the CFL criteris
Es=struct('Tstep',0.1,'Tdest',200,'Jcob',0,'posflag',1,'LSAthresh',0,'STsmall',0.01,'Nsteps',1e4,'SSthresh',1e-5,'OLdraw',1,'St1Color',circshift(hsv(3),2),'BfColor',[0 0 0 ; 1 0 0; 0 0.75 0; 0 0 1; 0 0.75 0.75; 1 0 1],'BfStyle',['-- ';'-  ';'x  ']);
Es.Tstep = 0.5.*(Ps.Lx./Ps.Nx).^2./max(Ps.Ds)./2;

% LocFunc and SpaFunc are the functions that detail the local and non-local parts of the system
% Examples of Ps for some models:
Ps_RH=struct('LocFunc',@L_RH,'SpaFunc',@S_RD,'P',0.4,'mu',0.5,'alpha',0.4,'f',0.2,'ni',0.4,'gamma',0.1,'Ds',[1 1 1000],'Vnum',3,'Lx',400,'Ly',400,'Nx',512,'Ny',1);
Ps_SG=struct('LocFunc',@L_SG,'SpaFunc',@S_SG,'P',1,'q',0.05,'ni',10/3,'alpha',100/3,'eta',3.5,'gamma',50/3,'rho',0.95,'f',0.1,'Ds',[1 100 10000],'Vnum',3,'Lx',100,'Ly',100,'Nx',512,'Ny',1); Ps_SG.SpaMat=DervSM(2,Ps_SG,Es);

Ps_VSG=struct('LocFunc',@L_VSG,'SpaFunc',@S_RD,'P',1,'eta',3.5,'kappa',1,'mu',1,'nu',3.333,'lambda',3.333,'gamma',3.333,'rho',0,'Ds',[1 1000],'Vnum',2,'Lx',21.25,'Ly',5,'Nx',1000,'Ny',1);

Ps_P2S=struct('LocFunc',@L_P2S,'SpaFunc',@S_RD,'P',11.85,'ni',1,'eta1',0.5,'eta2',3,'K1',3,'K2',0.5,'mu',2,'L',6,'gamma',2.2,'xhi',4.5,'Ds',[0.0000625 0.0000625 0.625],'Vnum',3,'Lx',5,'Ly',5,'Nx',512,'Ny',1);
Ps_DC=struct('LocFunc',@L_DC,'SpaFunc',@S_RD,'P',250,'LambdaB',0.032,'KB',10,'MB',1.2,'PhiB',0.1,'LambdaC',0.02,'KC',0.05,'MC',0.2,'PhiC',100,'A',40,'f',0.1,'Q',0.05,'N',4,'GammaB',70,'GammaC',0.032,'Ds',[6.25*10^(-4) 6.25*10^(-3) 6.25*10^(-2) 5*10^(0)],'Vnum',4,'Lx',10,'Ly',100,'Nx',256,'Ny',1);
Ps_SGK=struct('LocFunc',@L_SGK,'SpaFunc',@S_SGK,'P',1.1,'q',0.25,'ni',10/3,'alpha',100/3,'eta',0.16,'kappa',5,'rho',0.95,'f',0.1,'Ds',[1 100 10000],'Vnum',3,'Lx',200,'Ly',100,'Nx',512,'Ny',1); Ps_SGK.SpaMat=DervSM(2,Ps_SGK,Es);

Ps_SH=struct('LocFunc',@L_SH,'SpaFunc',@S_LD,'lambda',-1,'a2',2,'a3',1,'Ds',[0 -2 0 -1],'Vnum',1,'Lx',100,'Ly',100,'Nx',512,'Ny',1);
Ps_LL=struct('LocFunc',@L_LL,'SpaFunc',@S_LL,'mu',1.02,'Lambda',1.2,'L',0.2,'Ds',[1],'Vnum',1,'Lx',100,'Ly',100,'Nx',512,'Ny',1);


# Make a nice graph of several WLs for a model
base='sdg_h2sub';
ups={'P','','Lx',''}; inds=[1,2,7,8];
bpart={}; bfull={}; for ii=1:10 fname=sprintf('b.%s_%d',base,ii-1); bpart{ii}=ReadAutoBif(fname); end; bfull{1}=bpart{1}; for ii=2:10 fname=sprintf('%s_%d',base,ii-1); bfull{ii}=AnalyzeAutoStates(fname,Ps_SG,Es,@LSA,[],inds,ups); end;
plotbf(bfull)
lg(1,:)='Uniform States';
for ii=1:11 ll(ii)=bfull{ii+1}(1,3); tmp=sprintf('WL=%3.0f                       ',ll(ii)); lg(ii+1,:)=tmp(1:length(lg(1,:))); end;
legend(lg); xlabel('P');  ylabel('||B||');


% Read a set of AUTO files and check their linear stability  {{ use: ups={'','P','Lx',''}; inds=[8,7,1,2]; }}tic; prh=[]; for ii=1:65 name=sprintf('full_%d',ii-1); tmp=AnalyzeAutoStates(name,Ps_RH,Es,@LSA,[],inds,ups); prh=[prh;tmp]; end; toc
plot(prh(:,2),prh(:,1),'.',prh(:,2),prh(:,1).*prh(:,5),'*')


% Same thing for P2S model
tic; pts=[]; for ii=1:65 name=sprintf('full_%d',ii-1); tmp=AnalyzeAutoStates(name,Ps_P2S,Es,@LSA,[],inds,ups,'Es.LSAthresh',0.01); pts=[pts;tmp]; end; toc

aaa=find(pts(:,5));
plot(pts(:,2),pts(:,1),'.',pts(aaa,2),pts(aaa,1),'*') 
xlabel('P');  ylabel('k'); legend('Unstable','Stable');

Ps2=struct('LocFunc',@L_VSG,'SpaFunc',@S_RD,'P',102,'eta',7,'kappa',0.4,'mu',3.5,'nu',5,'lambda',0.1,'gamma',4.,'rho',0.7,'Ds',[0.4 50],'Vnum',2,'Lx',120,'Ly',120,'Nx',240,'Ny',240);

Ps_VSG2=struct('LocFunc',@L_VSG,'SpaFunc',@S_RD,'P',1.1,'eta',3.5,'kappa',1,'mu',1,'nu',7,'lambda',3.,'gamma',3.,'rho',0.5,'Ds',[1 100],'Vnum',2,'Lx',500,'Ly',500,'Nx',256,'Ny',256);
Vs2=ones(Ps_VSG2.Nx*Ps_VSG2.Ny,1)*[0.5 0.1]+rand(Ps_VSG2.Nx*Ps_VSG2.Ny,2)/10;
pmax=1.15; pmin=1.1;
Ps_VSG2.P=reshape(ones(Ps_VSG2.Ny,1)*(1:Ps_VSG2.Nx)/Ps_VSG2.Nx*(pmax-pmin)+pmin,Ps_VSG2.Nx*Ps_VSG2.Ny,1);

out1=IPS_AKK(Vs2,Ps_VSG2,Es);
aa=RunToSS(Vs2,Ps_VSG2,Es,@IPS_AKK,'Es.OLdraw',1);


Ps_GKGS=struct('LocFunc',@L_GKGS,'SpaFunc',@S_RD,'a',0.9,'m',0.45,'c',1,'Ds',[1 100],'Vnum',2,'Lx',40,'Ly',1,'Nx',200,'Ny',1);
Ps_ED=struct('LocFunc',@L_ED,'SpaFunc',@S_RD,'lambda',1,'Ds',[1],'Vnum',1,'Lx',200,'Ly',400,'Nx',500,'Ny',1,'IntegFunc',@I_PseudoSpectralAKK);

